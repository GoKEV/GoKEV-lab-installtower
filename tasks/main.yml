---
# tasks file for GoKEV-lab-installtower

- name: check if we need to do installer things
  uri:
    url: https://localhost/api/v1/ping/
    method: GET
    user: admin
    password: "{{ towerpass }}"
    validate_certs: False 
  register: checkout
  ignore_errors: True

- name: set condtional if the above didn't error
  set_fact:
    towerchk: "{{ checkout.json.version }}"
  when: checkout.json is defined

- name: Clears install directory
  file:
    path: /root/ansible-installer/
    state: absent

- name: Creates install directory
  file:
    path: /root/ansible-installer/
    state: directory

- name: Grab the latest Tower installer
  unarchive:
    src: http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz
    dest: /root/ansible-installer/
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Add admin_password to the inventory file
  lineinfile:
    path: /root/ansible-installer/inventory
    regexp: ^admin_password=
    line: "admin_password='{{ towerpass }}'"

- name: Add pg_password to the inventory file
  lineinfile:
    path: /root/ansible-installer/inventory
    regexp: ^pg_password=
    line: "pg_password='{{ towerpass }}'"

- name: Add rabbitmq_password to the inventory file
  lineinfile:
    path: /root/ansible-installer/inventory
    regexp: ^rabbitmq_password=
    line: "rabbitmq_password='{{ towerpass }}'"

- name: run the tower installer
  shell: ./setup.sh
  args:
    chdir: /root/ansible-installer/

- name: wait for tower to be up
  uri:
    url: https://localhost/api/v1/ping/
    method: GET
    user: admin
    password: redhat
    validate_certs: False
    force_basic_auth: yes
  register: check2
  until: check2.json is defined
  retries: 10
  delay: 30



